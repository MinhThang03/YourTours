server:
  port: ${PORT:8080}
spring:
  application:
    name: yourtours
  profiles:
    active: ${ENV:dev}
  datasource:
    url: ${DATABASE_URL:jdbc:mysql://localhost:3306/your_tours}
    username: ${DATABASE_USER:root}
    password: ${DATABASE_PWD:2001}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      pool-name: hikari-yourtours
      auto-commit: true
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
      minimum-idle: 3
      maximum-pool-size: 20
    type: com.zaxxer.hikari.HikariDataSource
  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    properties:
      hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: update
  data:
    redis:
      repositories:
        enabled: false
  cache:
    type: redis
  redis:
    host: ${REDIS_HOST:10.30.1.143}
    port: ${REDIS_PORT:30010}
    password: ${REDIS_PASSWORD:XcwvZ7knqPzn6HaH}
  http:
    multipart:
      enabled: false
  task:
    scheduling:
      pool:
        size: 5
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USER:user@gmail.com}
    password: ${MAIL_PASSWORD:ttttt}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
common:
  core:
    open-api:
      servers: ${OPEN_API_SERVER:http://localhost:8080}
    security:
      path-matcher:
        permit-all-path-patterns:
          - /webjars/swagger-ui/**
          - /v3/api-docs/**
          - /swagger-resources/**
          - /webjars/**
          - /swagger-ui/**
          - /swagger-ui.html
          - /null/swagger-resources/**
          - /api/v1/auth/**
          - /api/v1/public/**
          - /api/v1/media/public/**
        permit-all-map:
          GET:
            - /api/v1/languages-support/**
            - /api/v1/translator/**
            - /api/v1/languages/**
      cors:
        allowed-origins:
          - ${CORS_ORIGINS:http://localhost:8080}
          - http://localhost:8000
          - http://localhost:3000
          - https://your-tours-client.vercel.app/
          - https://your-tours-client-git-develop-thaihaidev.vercel.app/
        allowed-methods: ${CORS_METHODS:*}
        allowed-headers: ${CORS_HEADERS:*}

      oauth2-resource-server:
        auth:
          jwk-set-uri: ${KEYCLOAK_URI:https://keycloak-ute.herokuapp.com}/auth/realms/${PROFILE_REALM:your-tour}/protocol/openid-connect/certs
          issuer-uri: ${KEYCLOAK_URI:https://keycloak-ute.herokuapp.com}/auth/realms/${PROFILE_REALM:your-tour}

your-tour-profile:
  security:
    keycloak-realms:
      your-tour:
        realm-name: ${PROFILE_REALM:your-tour}
        auth-server-url: ${KEYCLOAK_URI:https://keycloak-ute.herokuapp.com}/auth
        client-id: ${PROFILE_CLIENT_ID:your-tour-client}
        client-secret: ${PROFILE_CLIENT_SECRET:mnct1QhwqPjN7kzPNoiNfyLiN7O9iKlo}
        token-uri: ${KEYCLOAK_URI:https://keycloak-ute.herokuapp.com}/auth/realms/${PROFILE_REALM:your-tour}/protocol/openid-connect/token
        token-invalidate-uri: ${KEYCLOAK_URI:https://keycloak-ute.herokuapp.com}/auth/realms/${PROFILE_REALM:your-tour}/protocol/openid-connect/logout
        user-info-uri: ${KEYCLOAK_URI:https://keycloak-ute.herokuapp.com}/auth/realms/${PROFILE_REALM:your-tour}/protocol/openid-connect/userinfo
        credentials:
          secret: ${PROFILE_CLIENT_SECRET:mnct1QhwqPjN7kzPNoiNfyLiN7O9iKlo}
          grant_type: password


aws-s3:
  endpoint: ${AWS_ENDPOINT:https://s3.ap-northeast-1.amazonaws.com}
  accessKey: ${AWS_ACCESS_KEY:TEST}
  secretKey: ${AWS_SECRET_KEY:test}
  bucketName: ${AWS_S3_BUCKET:your-tours}
  region: ${AWS_S3_REGION:ap-northeast-1}
  endpoint-s3: ${AWS-S3-ENDPOINT:https://${AWS_S3_BUCKET:your-tours}.s3.${AWS_S3_REGION:ap-northeast-1}.amazonaws.com}
